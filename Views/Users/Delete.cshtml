@using InventorySystem.Models.DataEntities
@model Item

@{
    ViewData["Title"] = "Delete Confirm";
    string catergoryFromModel = ViewBag.Category;
    Layout = null;
}

<script>
    $(document).ready(function () {
        var categoryFetched = "@Html.Raw(catergoryFromModel)";
 
        //changeBgBaseOnCategory(baseOnCategory, firmware, status, category)
        changeBgBaseOnCategory(categoryFetched, '#firmware-status', '#item-status', '#item-category');
        changeBgBaseOnCategory(categoryFetched, '#item-status', '#item-status', '#item-category');

        var id = [];
        id.push(@Model.ItemId);
        var idArray = id;
       
        $('#deleteButtonView').on('click', function(){
          DeleteRequest(idArray);
        });
    });
</script>
<style>
    .status-body{
        color: white;
        width: 90%;
        font-size: 0.8rem;
        border-radius: 12px;
        text-align: center;
    }

    .w-33 {
        width: 33%;
    }
</style>
<div>
    <h5 class="text-break text-danger"><strong>Are you sure you want to delete this item?</strong></h5>


    <hr />


    <dl>
        <div class="d-flex" style="font-size: 0.9rem;">
            @if (Model.Category == "Books")
            {
                <dt class="d-flex col-sm-2 w-50">
                    @Html.DisplayName("ISBN")
                </dt>
                <dt class="d-flex col-sm-2 w-50 border-start ps-2">
                    @Html.DisplayName("Title")
                </dt>
            }
            else
            {
                <dt class="d-flex col-sm-2 w-50">
                    @Html.DisplayNameFor(model => model.ItemCode)
                </dt>
                <dt class="d-flex col-sm-2 w-50 border-start ps-2">
                    @Html.DisplayNameFor(model => model.ItemName)
                </dt>
            }


        </div>

        <div class="d-flex" style="font-size: 0.9rem;">
            <dd class="d-flex col-sm-10 text-break w-50">
                @Html.DisplayFor(model => model.ItemCode)
            </dd>
            <dd class="d-flex col-sm-10 text-break w-50 border-start ps-2">
                @Html.DisplayFor(model => model.ItemName)
            </dd>
        </div>



        <div style="font-size: 0.9rem;">
            <dt class="col-sm-2 w-auto">
                @Html.DisplayNameFor(model => model.ItemDescription)
            </dt>
            @if (!String.IsNullOrEmpty(Model.ItemDescription))
            {
                <dd class="col-sm-10 text-break border w-auto p-2" style="font-size: 0.8rem;">
                    @Html.DisplayFor(model => model.ItemDescription)
                </dd>
            }
            else
            {
                <dd class="col-sm-10 text-break border w-auto p-2" style="font-size: 0.8rem;">
                    No Description
                </dd>
            }
        </div>

    </dl>
    <div id="DeleteViewBaseOnCategory">
        @if(Model.Category == "Robots")
        {
            @await Html.PartialAsync("~/Views/Users/components/HasFirmwareDelete.cshtml")
        }
        else
        {
            @await Html.PartialAsync("~/Views/Users/components/NoFirmwareDelete.cshtml")
        }
    </div>
    
    <div class="mt-4 d-flex" id="delete-form" >
    
        <button class="ms-auto btn btn-danger" id="deleteButtonView">
            Confirm
        </button>
        <input type="button" value="Cancel" class="btn btn-outline-secondary ms-1 close-modalBtn" data-bs-dismiss="modal" />
    </div>
</div>





      